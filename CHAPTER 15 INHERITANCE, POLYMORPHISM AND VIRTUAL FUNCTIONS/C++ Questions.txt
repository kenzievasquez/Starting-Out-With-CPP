//////////////////// 15.1 WHAT IS INHERITANCE? ////////////////////
___What IS inheritance? 
When an object can be specified and derive from a more general object,
inheriting all its general characteristics (member variables and functions).


___Why is it beneficial?
IT AVOIDS CODE DUPLICATION.
Instead of rewriting the same code in multiple classes,
you can put shared functionality into a base class,
and subclasses will automatically inherit it.

The derived class inherits the member variables and member functions 
of the base class without any of them being rewritten.


___What does it allow you to do?
Inheritance allows a new class to be based on an existing class.
INHERITANCE ALLOWS A HIERARCHY OF CLASSES WHICH RELATE TO EACHOTHER.
The new class inherits all the member variables and functions (except the
constructors and destructor) of the class it is based on.
Furthermore, new member variables and functions may be added 
to the derived class to make it more specialized than the base class.


___How would you explain Inheritance in C++ in 3 sentences?
Inheritance allows the creation of a system
where one class can inherit the functionality of a more general (parent) class.
It ALLOWS objects to be specified from general objects.
It EXISTS to avoid code duplication.

___What are the steps that a class hierarchy would go through
___to construct and destruct the specified object created?
Starting from the top of the pyramid, it will go through every constructor
down to the specified objected created, and then go backwards towards the
top of the pyramid to destruct.
 P   starting from top       parent constructor child constructor
 |
 .
 |
 C   to bottom               child destructor   parent destructor

 parent constructor
 child constructor
 child destructor
 parent constructor

//////////////////// 15.2 PROTECTED MEMBERS AND CLASS ACESS ////////////////////
___Why should you avoid using 'protected' or friend in a class?
Because it allows a class direct access to a member variable,
bypassing any input validation a setter method (or mutator function) might have,
creating a more vulnerable or weaker class.

___What is a class access specifier
___and what can access a 'protected' member?
A class access specifier refers to the 3 keywords (public, protected or private) used when a class inherits from another. 
It controls how the base class members appear in the derived class.

//////////////////// 15.6 POLYMORPHISM & VIRTUAL FUNCTIONS ////////////////////
___What is polymorphism?
poly  - many
morph - change, or form

Polymorphism is the ability (in programming) to present the same interface for differing underlying forms (data types).
