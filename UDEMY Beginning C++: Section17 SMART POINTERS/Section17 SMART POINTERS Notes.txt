shared_ptr
- Provides shared ownership of heap objects

shared_ptr<T>
- points to an object of type T on the heap
- it is NOT unique - which means there can be many shared_ptrs 
  pointing to the same objects on the heap
- establishes shared ownership relationship
- CAN be assigned and copied
- CAN be moved
- does NOT support managing arrays by default
- when the use count is zero (0), the managed object on the heap is destroyed

use_count - the number of shared_ptr objects managing the heap object
- when the use_count becomes zero (0), the heap object is deallocated

- use std::make_shared - it's more efficient
ex:
	std::shared_ptr<int> p1 = std::make_shared<int>(100);
